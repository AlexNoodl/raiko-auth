basePath: /api/v1
definitions:
  models.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  models.LoginRequest:
    properties:
      login:
        type: string
      password:
        type: string
    required:
    - login
    - password
    type: object
  models.LoginResponse:
    properties:
      token:
        type: string
    type: object
  models.RegisterRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        maxLength: 20
        minLength: 3
        type: string
    required:
    - email
    - password
    - username
    type: object
  models.SuccessResponse:
    properties:
      message:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Сервер авторизации.
  title: API Авторизации
  version: "1.0"
paths:
  /api/v1/login:
    post:
      consumes:
      - application/json
      description: Аутентифицирует пользователя и возвращает JWT-токен
      parameters:
      - description: Данные для входа
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Успешный вход
          schema:
            $ref: '#/definitions/models.LoginResponse'
        "400":
          description: Неверные данные
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Аутентификация пользователя
      tags:
      - auth
  /api/v1/register:
    post:
      consumes:
      - application/json
      description: Создает нового пользователя с указанными email, username и паролем
      parameters:
      - description: Данные для регистрации
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Пользователь успешно создан
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Неверные данные или пароль не соответствует требованиям
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "409":
          description: Email или username уже занят
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Регистрация нового пользователя
      tags:
      - auth
swagger: "2.0"
